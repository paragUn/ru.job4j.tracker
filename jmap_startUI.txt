1) Для начала узнаем pid процесса

>jps

8852 Jps
12412 RemoteMavenServer36
15996
5292 StartUI

pid = 5292

2) Профилирование с помощью утилиты jmap
>jmap -histo 5292

 num     #instances         #bytes  class name (module)
-------------------------------------------------------
   1:         38755        2293448  [B (java.base@17)
   2:         28884         693216  java.lang.String (java.base@17)
   3:          3816         307760  [Ljava.lang.Object; (java.base@17)
   4:         10154         243696  java.time.LocalDateTime (java.base@17)
   5:         10092         242208  java.time.LocalDate (java.base@17)
   6:         10027         240648  java.time.LocalTime (java.base@17)
   7:         10000         240000  ru.job4j.tracker.Item
   8:           387         199888  [I (java.base@17)
   9:          1425         173968  java.lang.Class (java.base@17)
  10:          4995         159840  java.util.HashMap$Node (java.base@17)
  11:          3372         134880  java.util.Formatter$FormatSpecifier (java.base@17)
  12:          3372         107904  java.util.Formatter$FixedString (java.base@17)
  13:          3023          96736  java.util.concurrent.ConcurrentHashMap$Node (java.base@17)
  14:           222          77928  [C (java.base@17)
  15:           366          69728  [Ljava.util.HashMap$Node; (java.base@17)
  16:          1140          63840  java.nio.HeapCharBuffer (java.base@17)
  17:          2376          57024  java.util.AbstractMap$SimpleImmutableEntry (java.base@17)
  18:          2249          53976  java.lang.StringBuilder (java.base@17)
  19:          1089          43560  java.util.LinkedHashMap$Entry (java.base@17)
  20:          1124          35968  java.util.Formatter (java.base@17)
  21:           629          32392  [Ljava.lang.String; (java.base@17)
  22:          1297          31128  java.lang.Long (java.base@17)
  23:            73          30800  [Ljava.util.concurrent.ConcurrentHashMap$Node; (java.base@17)
  24:          1162          27888  java.util.ArrayList (java.base@17)
  25:          1124          26976  java.time.format.DateTimePrintContext (java.base@17)
  26:          1392          22272  java.lang.Integer (java.base@17)
  27:           367          17616  java.util.HashMap (java.base@17)
  28:           196          14896  [Ljava.lang.ref.SoftReference; (java.base@17)
  29:           305          14640  java.lang.invoke.MemberName (java.base@17)
  30:           362          11584  java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry (java.base@17)
  31:           284          11360  java.lang.invoke.MethodType (java.base@17)
  32:           306           9792  java.lang.invoke.LambdaForm$Name (java.base@17)
  33:           370           8880  java.lang.module.ModuleDescriptor$Exports (java.base@17)
  34:           299           8392  [Ljava.lang.Class; (java.base@17)
  35:            32           6624  [Ljava.lang.invoke.MethodHandle; (java.base@17)
  36:           154           6160  java.lang.ref.SoftReference (java.base@17)
  37:           249           5976  java.lang.invoke.ResolvedMethodName (java.base@17)
  38:            93           5952  java.util.concurrent.ConcurrentHashMap (java.base@17)
  39:            71           5680  java.net.URI (java.base@17)
  40:           227           5448  java.util.ImmutableCollections$Set12 (java.base@17)
  41:           168           5376  java.lang.module.ModuleDescriptor$Requires (java.base@17)
  42:           192           4608  jdk.internal.module.ServicesCatalog$ServiceProvider (java.base@17)
  43:            71           4544  java.lang.module.ModuleDescriptor (java.base@17)
  44:           270           4320  java.util.HashSet (java.base@17)
  45:            87           4176  java.lang.invoke.LambdaForm (java.base@17)
  46:            92           4064  [Ljava.lang.invoke.LambdaForm$Name; (java.base@17)
  47:            11           4048  java.lang.Thread (java.base@17)
  48:            71           3976  jdk.internal.module.ModuleReferenceImpl (java.base@17)
  49:            54           3888  java.lang.reflect.Constructor (java.base@17)
  50:            69           3864  java.lang.Module (java.base@17)
  51:            90           3600  java.math.BigInteger (java.base@17)
  52:           221           3536  java.lang.Object (java.base@17)
  53:            55           3520  java.lang.Class$ReflectionData (java.base@17)
  54:           108           3456  java.lang.invoke.MethodTypeForm (java.base@17)
  55:           130           3120  java.util.ImmutableCollections$SetN (java.base@17)
  56:           121           2904  java.lang.invoke.LambdaForm$NamedFunction (java.base@17)
  57:            11           2888  [J (java.base@17)
  58:            54           2592  jdk.internal.ref.CleanerImpl$PhantomCleanableRef (java.base@17)
  59:           103           2472  [[C (java.base@17)
  60:            97           2328  java.util.ImmutableCollections$List12 (java.base@17)
  61:            71           2272  java.lang.invoke.DirectMethodHandle (java.base@17)
  62:            68           2176  java.lang.invoke.LambdaForm$Kind (java.base@17)
  63:           128           2048  java.lang.Character (java.base@17)
  64:            62           1984  jdk.internal.loader.BuiltinClassLoader$LoadedModule (java.base@17)
  65:            74           1776  java.util.concurrent.CopyOnWriteArrayList (java.base@17)
  66:            71           1704  jdk.internal.module.SystemModuleFinders$2 (java.base@17)
  67:            41           1640  java.io.ObjectStreamField (java.base@17)
  68:            33           1584  java.time.temporal.ValueRange (java.base@17)
  69:             1           1568  [[B (java.base@17)
  70:            64           1536  java.lang.module.ModuleDescriptor$Provides (java.base@17)
  71:            63           1512  java.lang.module.ResolvedModule (java.base@17)
  72:            63           1512  jdk.internal.module.SystemModuleFinders$SystemModuleReader (java.base@17)
  73:            47           1504  jdk.internal.reflect.NativeConstructorAccessorImpl (java.base@17)
  74:            45           1440  java.lang.invoke.MethodHandleNatives$CallSiteContext (java.base@17)
  75:            14           1232  java.lang.reflect.Method (java.base@17)
  76:            30           1200  java.lang.invoke.DirectMethodHandle$Accessor (java.base@17)
  77:            30           1200  java.time.temporal.ChronoField (java.base@17)
  78:            38           1184  [Ljava.math.BigInteger; (java.base@17)
  79:            47           1128  [Ljava.lang.reflect.Constructor; (java.base@17)
  80:             5           1104  [Z (java.base@17)
  81:            68           1088  java.util.HashMap$KeySet (java.base@17)
  82:            67           1072  jdk.internal.module.SystemModuleFinders$3 (java.base@17)
  83:             1           1040  [Ljava.lang.Integer; (java.base@17)
  84:             1           1040  [Ljava.lang.Long; (java.base@17)
  85:            32           1024  java.lang.invoke.BoundMethodHandle$Species_L (java.base@17)
  86:            31            992  java.lang.invoke.VarHandle$AccessMode (java.base@17)
  87:            28            944  [Ljava.time.format.DateTimeFormatterBuilder$DateTimePrinterParser; (java.base@17)
  88:            28            896  java.util.Locale (java.base@17)
  89:            28            896  sun.util.locale.BaseLocale (java.base@17)
  90:            34            816  java.util.ImmutableCollections$ListN (java.base@17)
  91:            16            768  java.lang.invoke.LambdaFormEditor$Transform (java.base@17)
  92:            24            768  java.time.format.DateTimeFormatterBuilder$NumberPrinterParser (java.base@17)
  93:            19            760  sun.util.locale.LocaleObjectCache$CacheEntry (java.base@17)
  94:            47            752  jdk.internal.reflect.DelegatingConstructorAccessorImpl (java.base@17)
  95:            18            720  java.lang.invoke.DirectMethodHandle$Constructor (java.base@17)
  96:            17            680  sun.util.locale.provider.LocaleResources$ResourceReference (java.base@17)
  97:            21            672  java.lang.ref.ReferenceQueue (java.base@17)
  98:            28            672  java.time.format.DateTimeFormatterBuilder$CompositePrinterParser (java.base@17)
  99:            27            648  java.util.jar.Attributes$Name (java.base@17)
 100:             2            640  [Ljava.time.LocalDateTime; (java.base@17)
 101:            16            640  java.time.format.DateTimeFormatter (java.base@17)
 102:             3            624  [Ljava.lang.invoke.LambdaForm; (java.base@17)
 103:            15            600  java.security.AccessControlContext (java.base@17)
 104:             7            560  java.util.concurrent.TimeUnit (java.base@17)
 105:            10            560  sun.invoke.util.Wrapper (java.base@17)
 106:            14            560  sun.util.resources.Bundles$BundleReference (java.base@17)
 107:             1            528  [Ljava.lang.Character; (java.base@17)
 108:             8            512  java.net.URL (java.base@17)
 109:             8            512  java.nio.DirectByteBuffer (java.base@17)
 110:            16            512  java.time.temporal.ChronoUnit (java.base@17)
 111:             7            496  [Lsun.invoke.util.Wrapper; (java.base@17)
 112:            12            480  java.lang.OutOfMemoryError (java.base@17)
 113:            19            456  java.time.Duration (java.base@17)
 114:            14            448  sun.util.resources.Bundles$CacheKey (java.base@17)
 115:             5            440  java.util.regex.Pattern (java.base@17)
 116:             1            432  [[[C (java.base@17)
 117:             9            432  java.lang.invoke.BoundMethodHandle$SpeciesData (java.base@17)
 118:            18            432  java.lang.invoke.Invokers (java.base@17)
 119:            13            400  [Ljava.io.ObjectStreamField; (java.base@17)
 120:             2            384  [Ljava.time.ZoneOffset; (java.base@17)
 121:            16            384  java.time.ZoneOffset (java.base@17)
 122:             1            376  com.intellij.rt.execution.application.AppMainV2$1
 123:             1            376  java.lang.ref.Finalizer$FinalizerThread (java.base@17)
 124:             1            376  jdk.internal.misc.InnocuousThread (java.base@17)
 125:             1            368  java.lang.ref.Reference$ReferenceHandler (java.base@17)
 126:            23            368  java.lang.ref.ReferenceQueue$Lock (java.base@17)
 127:            23            368  java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser (java.base@17)
 128:             9            360  [Ljava.lang.invoke.BoundMethodHandle$SpeciesData; (java.base@17)
 129:             5            336  [S (java.base@17)
 130:             6            336  java.nio.DirectLongBufferU (java.base@17)
 131:             6            336  java.util.LinkedHashMap (java.base@17)
 132:             2            328  [D (java.base@17)
 133:             4            320  [Ljava.util.WeakHashMap$Entry; (java.base@17)
 134:             8            320  java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite (java.base@17)
 135:             3            312  java.util.jar.JarFile$JarFileEntry (java.base@17)
 136:             1            288  [Ljava.lang.invoke.LambdaForm$Kind; (java.base@17)
 137:             2            288  [Ljava.lang.invoke.MemberName; (java.base@17)
 138:             9            288  jdk.internal.org.objectweb.asm.Type (java.base@17)
 139:             9            288  sun.util.locale.BaseLocale$Key (java.base@17)
 140:             7            280  java.io.FileDescriptor (java.base@17)
 141:             5            280  java.nio.HeapByteBuffer (java.base@17)
 142:             7            280  java.security.ProtectionDomain (java.base@17)
 143:             5            280  sun.util.calendar.ZoneInfo (java.base@17)
 144:            17            272  java.util.HashMap$EntrySet (java.base@17)
 145:            11            264  java.lang.invoke.MethodHandleImpl$Intrinsic (java.base@17)
 146:             5            240  [Ljava.lang.invoke.LambdaForm$NamedFunction; (java.base@17)
 147:            10            240  java.nio.charset.CoderResult (java.base@17)
 148:            10            240  java.nio.file.StandardOpenOption (java.base@17)
 149:             6            240  java.security.CodeSource (java.base@17)
 150:             6            240  java.util.EnumMap (java.base@17)
 151:             6            240  java.util.stream.StreamOpFlag (java.base@17)
 152:             3            240  java.util.zip.ZipFile$Source (java.base@17)
 153:             6            240  jdk.internal.loader.NativeLibraries$NativeLibraryImpl (java.base@17)
 154:             7            224  java.lang.ref.WeakReference (java.base@17)
 155:             7            224  java.util.Hashtable$Entry (java.base@17)
 156:             7            224  java.util.regex.Pattern$Branch (java.base@17)
 157:             8            200  [Ljava.lang.reflect.Method; (java.base@17)
 158:             5            200  java.util.WeakHashMap$Entry (java.base@17)
 159:             4            192  [Ljava.lang.invoke.MethodType; (java.base@17)
 160:             6            192  java.lang.invoke.LambdaForm$BasicType (java.base@17)
 161:             8            192  java.math.RoundingMode (java.base@17)
 162:             3            192  java.nio.DirectByteBufferR (java.base@17)
 163:             6            192  java.time.format.TextStyle (java.base@17)
 164:             4            192  java.util.WeakHashMap (java.base@17)
 165:             3            192  sun.nio.fs.WindowsFileAttributes (java.base@17)
 166:             7            168  [Ljava.util.regex.Pattern$Node; (java.base@17)
 167:             1            168  [[Ljava.math.BigInteger; (java.base@17)
 168:             3            168  java.io.FileCleanable (java.base@17)
 169:             7            168  java.time.DayOfWeek (java.base@17)
 170:             3            168  java.util.Properties (java.base@17)
 171:             3            168  java.util.jar.JarFile (java.base@17)
 172:             7            168  java.util.regex.Pattern$GroupHead (java.base@17)
 173:             7            168  java.util.regex.Pattern$GroupTail (java.base@17)
 174:             2            160  [Ljava.lang.ThreadLocal$ThreadLocalMap$Entry; (java.base@17)
 175:             4            160  java.lang.invoke.BoundMethodHandle$Species_LL (java.base@17)
 176:             4            160  java.lang.invoke.DirectMethodHandle$Interface (java.base@17)
 177:             5            160  java.lang.invoke.VarHandle$AccessType (java.base@17)
 178:             5            160  java.net.InetAddress$InetAddressHolder (java.base@17)
 179:            10            160  java.util.Collections$UnmodifiableSet (java.base@17)
 180:            10            160  java.util.Formatter$Flags (java.base@17)
 181:             5            160  java.util.RegularEnumSet (java.base@17)
 182:             4            160  sun.nio.fs.WindowsPath (java.base@17)
 183:             5            160  sun.util.locale.provider.LocaleProviderAdapter$Type (java.base@17)
 184:             5            160  sun.util.locale.provider.LocaleResources (java.base@17)
 185:             2            152  [[Ljava.lang.String; (java.base@17)
 186:             1            144  [Ljava.lang.invoke.VarHandle$AccessMode; (java.base@17)
 187:             3            144  java.lang.ThreadGroup (java.base@17)
 188:             3            144  java.time.temporal.JulianFields$Field (java.base@17)
 189:             6            144  java.util.Collections$SetFromMap (java.base@17)
 190:             3            144  java.util.Hashtable (java.base@17)
 191:             6            144  java.util.LinkedList$Node (java.base@17)
 192:             1            144  java.util.Scanner (java.base@17)
 193:             6            144  java.util.regex.Pattern$BmpCharProperty (java.base@17)
 194:             3            144  jdk.internal.loader.URLClassPath$JarLoader (java.base@17)
 195:             6            144  jdk.internal.perf.PerfCounter (java.base@17)
 196:             6            144  jdk.net.ExtendedSocketOptions$ExtSocketOption (jdk.net@17)
 197:             1            136  [Ljava.time.temporal.ChronoField; (java.base@17)
 198:             3            128  [Ljava.util.Hashtable$Entry; (java.base@17)
 199:             4            128  java.io.File (java.base@17)
 200:             4            128  java.lang.ThreadLocal$ThreadLocalMap$Entry (java.base@17)
 201:             4            128  java.lang.invoke.MethodHandles$Lookup (java.base@17)
 202:             4            128  java.time.format.DateTimeFormatterBuilder$TextPrinterParser (java.base@17)
 203:             4            128  java.util.ImmutableCollections$MapN (java.base@17)
 204:             4            128  java.util.stream.FindOps$FindOp (java.base@17)
 205:             2            128  java.util.zip.Inflater (java.base@17)
 206:             4            128  jdk.internal.loader.NativeLibraries (java.base@17)
 207:             3            120  [Ljava.lang.invoke.LambdaForm$BasicType; (java.base@17)
 208:             3            120  java.lang.invoke.BoundMethodHandle$Species_LJ (java.base@17)
 209:             3            120  java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle (java.base@17)
 210:             5            120  java.lang.module.ModuleDescriptor$Opens (java.base@17)
 211:             5            120  java.time.format.SignStyle (java.base@17)
 212:             5            120  java.util.ArrayDeque (java.base@17)
 213:             5            120  java.util.stream.StreamOpFlag$Type (java.base@17)
 214:             5            120  sun.nio.fs.WindowsPathType (java.base@17)
 215:             3            112  [Ljava.lang.Thread; (java.base@17)
 216:             7            112  [Ljava.security.Principal; (java.base@17)
 217:             1            112  [Ljava.time.LocalTime; (java.base@17)
 218:             2            112  java.nio.DirectIntBufferRU (java.base@17)
 219:             7            112  java.security.ProtectionDomain$Key (java.base@17)
 220:             7            112  java.util.regex.Pattern$BranchConn (java.base@17)
 221:             1            104  jdk.internal.loader.ClassLoaders$AppClassLoader (java.base@17)
 222:             1            104  jdk.internal.loader.ClassLoaders$BootClassLoader (java.base@17)
 223:             1            104  jdk.internal.loader.ClassLoaders$PlatformClassLoader (java.base@17)
 224:             2             96  [Ljava.time.DayOfWeek; (java.base@17)
 225:             1             96  [Lsun.util.locale.BaseLocale; (java.base@17)
 226:             3             96  java.io.RandomAccessFile (java.base@17)
 227:             4             96  java.lang.NamedPackage (java.base@17)
 228:             3             96  java.lang.Runtime$Version (java.base@17)
 229:             2             96  java.lang.invoke.BoundMethodHandle$Species_LLLL (java.base@17)
 230:             3             96  java.lang.invoke.SimpleMethodHandle (java.base@17)
 231:             4             96  java.lang.module.ModuleDescriptor$Modifier (java.base@17)
 232:             4             96  java.lang.module.ModuleDescriptor$Requires$Modifier (java.base@17)
 233:             4             96  java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser (java.base@17)
 234:             4             96  java.time.format.DateTimeFormatterBuilder$SettingsParser (java.base@17)
 235:             4             96  java.time.format.DateTimeTextProvider$LocaleStore (java.base@17)
 236:             4             96  java.util.concurrent.ConcurrentHashMap$KeySetView (java.base@17)
 237:             4             96  java.util.regex.Pattern$BmpCharPredicate$$Lambda$22/0x80000002b (java.base@17)
 238:             4             96  java.util.regex.Pattern$BmpCharPropertyGreedy (java.base@17)
 239:             4             96  java.util.regex.Pattern$CharPropertyGreedy (java.base@17)
 240:             4             96  java.util.regex.Pattern$Qtype (java.base@17)
 241:             4             96  java.util.stream.StreamShape (java.base@17)
 242:             3             96  java.util.zip.ZipFile$CleanableResource (java.base@17)
 243:             1             96  jdk.internal.jimage.ImageReader$SharedImageReader (java.base@17)
 244:             3             96  jdk.internal.reflect.NativeMethodAccessorImpl (java.base@17)
 245:             3             96  sun.net.spi.DefaultProxySelector$NonProxyInfo (java.base@17)
 246:             2             96  sun.nio.cs.StreamDecoder (java.base@17)
 247:             2             96  sun.nio.cs.StreamEncoder (java.base@17)
 248:             2             96  sun.nio.cs.UTF_8$Encoder (java.base@17)
 249:             2             80  [Ljava.lang.OutOfMemoryError; (java.base@17)
 250:             1             80  [Ljava.nio.ByteBuffer; (java.base@17)
 251:             1             80  [Ljava.time.temporal.ChronoUnit; (java.base@17)
 252:             2             80  [Ljava.util.stream.StreamOpFlag$Type; (java.base@17)
 253:             2             80  java.io.BufferedWriter (java.base@17)
 254:             2             80  java.io.PrintStream (java.base@17)
 255:             2             80  java.lang.ModuleLayer (java.base@17)
 256:             2             80  java.lang.invoke.MethodHandleImpl$AsVarargsCollector (java.base@17)
 257:             2             80  java.lang.invoke.VarHandle$AccessDescriptor (java.base@17)
 258:             2             80  java.lang.module.Configuration (java.base@17)
 259:             2             80  java.util.Collections$SingletonMap (java.base@17)
 260:             2             80  java.util.IdentityHashMap (java.base@17)
 261:             2             80  java.util.Locale$Category (java.base@17)
 262:             5             80  java.util.regex.Pattern$$Lambda$19/0x800000025 (java.base@17)
 263:             1             80  sun.nio.ch.NioSocketImpl (java.base@17)
 264:             1             80  sun.util.cldr.CLDRLocaleProviderAdapter (java.base@17)
 265:             1             80  sun.util.locale.provider.JRELocaleProviderAdapter (java.base@17)
 266:             3             72  [Ljava.security.ProtectionDomain; (java.base@17)
 267:             3             72  java.lang.WeakPairMap (java.base@17)
 268:             3             72  java.net.Inet4Address (java.base@17)
 269:             3             72  java.net.Proxy$Type (java.base@17)
 270:             3             72  java.net.StandardProtocolFamily (java.base@17)
 271:             3             72  java.security.Permissions (java.base@17)
 272:             3             72  java.time.Instant (java.base@17)
 273:             3             72  java.time.format.ResolverStyle (java.base@17)
 274:             3             72  java.util.concurrent.atomic.AtomicLong (java.base@17)
 275:             3             72  java.util.concurrent.atomic.AtomicMarkableReference$Pair (java.base@17)
 276:             1             72  java.util.regex.Matcher (java.base@17)
 277:             3             72  java.util.regex.Pattern$$Lambda$21/0x80000002a (java.base@17)
 278:             3             72  java.util.regex.Pattern$Start (java.base@17)
 279:             3             72  java.util.stream.Collector$Characteristics (java.base@17)
 280:             3             72  java.util.zip.ZipFile$Source$Key (java.base@17)
 281:             3             72  sun.security.util.LazyCodeSourcePermissionCollection (java.base@17)
 282:             3             72  sun.util.resources.ParallelListResourceBundle$KeySet (java.base@17)
 283:             1             64  [Ljava.lang.invoke.MethodHandleImpl$Intrinsic; (java.base@17)
 284:             2             64  [Ljava.nio.charset.CoderResult; (java.base@17)
 285:             2             64  [Ljava.util.stream.Collector$Characteristics; (java.base@17)
 286:             2             64  java.io.BufferedOutputStream (java.base@17)
 287:             2             64  java.io.FileOutputStream (java.base@17)
 288:             2             64  java.lang.ClassValue$Entry (java.base@17)
 289:             2             64  java.lang.Package (java.base@17)
 290:             2             64  java.lang.invoke.VarForm (java.base@17)
 291:             2             64  java.lang.ref.ReferenceQueue$Null (java.base@17)
 292:             2             64  java.net.Inet6Address$Inet6AddressHolder (java.base@17)
 293:             1             64  java.net.SocksSocketImpl (java.base@17)
 294:             2             64  java.time.temporal.IsoFields$Unit (java.base@17)
 295:             2             64  java.util.HexFormat (java.base@17)
 296:             2             64  java.util.LinkedList (java.base@17)
 297:             4             64  java.util.WeakHashMap$KeySet (java.base@17)
 298:             4             64  java.util.concurrent.ConcurrentHashMap$ValuesView (java.base@17)
 299:             4             64  java.util.concurrent.atomic.AtomicInteger (java.base@17)
 300:             2             64  java.util.concurrent.locks.ReentrantLock$NonfairSync (java.base@17)
 301:             4             64  java.util.regex.Pattern$BitClass (java.base@17)
 302:             4             64  jdk.internal.module.ServicesCatalog (java.base@17)
 303:             2             64  sun.nio.fs.NativeBuffer (java.base@17)
 304:             1             56  [Ljava.nio.file.StandardOpenOption; (java.base@17)
 305:             1             56  [[I (java.base@17)
 306:             1             56  java.lang.invoke.BoundMethodHandle$Specializer (java.base@17)
 307:             1             56  java.lang.invoke.BoundMethodHandle$Species_LLLLLLL (java.base@17)
 308:             1             56  jdk.internal.org.objectweb.asm.Label (java.base@17)
 309:             1             48  [Ljava.math.RoundingMode; (java.base@17)
 310:             1             48  [Ljava.util.concurrent.TimeUnit; (java.base@17)
 311:             1             48  java.io.BufferedReader (java.base@17)
 312:             2             48  java.io.File$PathStatus (java.base@17)
 313:             2             48  java.io.InputStreamReader (java.base@17)
 314:             2             48  java.io.OutputStreamWriter (java.base@17)
 315:             1             48  java.lang.NullPointerException (java.base@17)
 316:             2             48  java.lang.RuntimePermission (java.base@17)
 317:             3             48  java.lang.ThreadLocal (java.base@17)
 318:             2             48  java.lang.ThreadLocal$ThreadLocalMap (java.base@17)
 319:             1             48  java.lang.invoke.BoundMethodHandle$Specializer$Factory (java.base@17)
 320:             2             48  java.lang.invoke.MethodHandles$Lookup$ClassOption (java.base@17)
 321:             2             48  java.net.Inet6Address (java.base@17)
 322:             3             48  java.nio.charset.CodingErrorAction (java.base@17)
 323:             2             48  java.security.BasicPermissionCollection (java.base@17)
 324:             3             48  java.security.SecureClassLoader$CodeSourceKey (java.base@17)
 325:             2             48  java.time.format.DateTimeFormatterBuilder$1 (java.base@17)
 326:             2             48  java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser (java.base@17)
 327:             3             48  java.util.LinkedHashMap$LinkedKeySet (java.base@17)
 328:             3             48  java.util.Optional (java.base@17)
 329:             3             48  java.util.ResourceBundle$NoFallbackControl (java.base@17)
 330:             1             48  java.util.concurrent.ConcurrentSkipListMap (java.base@17)
 331:             3             48  java.util.concurrent.atomic.AtomicMarkableReference (java.base@17)
 332:             2             48  java.util.regex.Pattern$StartS (java.base@17)
 333:             2             48  java.util.zip.Inflater$InflaterZStreamRef (java.base@17)
 334:             1             48  jdk.internal.jimage.ImageHeader (java.base@17)
 335:             2             48  jdk.internal.misc.Signal (java.base@17)
 336:             2             48  jdk.internal.misc.Signal$NativeHandler (java.base@17)
 337:             3             48  jdk.internal.reflect.DelegatingMethodAccessorImpl (java.base@17)
 338:             2             48  sun.nio.fs.NativeBuffer$Deallocator (java.base@17)
 339:             1             48  sun.text.resources.FormatData (java.base@17)
 340:             1             48  sun.text.resources.JavaTimeSupplementary (java.base@17)
 341:             1             48  sun.text.resources.ext.FormatData_ru (jdk.localedata@17)
 342:             1             48  sun.text.resources.ext.FormatData_ru_RU (jdk.localedata@17)
 343:             1             48  sun.text.resources.ext.JavaTimeSupplementary_ru (jdk.localedata@17)
 344:             2             48  sun.util.locale.provider.LocaleServiceProviderPool (java.base@17)
 345:             1             48  sun.util.resources.TimeZoneNames (java.base@17)
 346:             1             48  sun.util.resources.TimeZoneNames_en (java.base@17)
 347:             1             48  sun.util.resources.cldr.TimeZoneNames (java.base@17)
 348:             1             48  sun.util.resources.cldr.TimeZoneNames_en (java.base@17)
 349:             1             40  [Ljava.lang.invoke.VarHandle$AccessType; (java.base@17)
 350:             1             40  [Ljava.time.format.SignStyle; (java.base@17)
 351:             1             40  [Ljava.time.format.TextStyle; (java.base@17)
 352:             1             40  [Ljava.util.stream.StreamOpFlag; (java.base@17)
 353:             1             40  [Lsun.nio.fs.WindowsPathType; (java.base@17)
 354:             1             40  [Lsun.util.locale.provider.LocaleProviderAdapter$Type; (java.base@17)
 355:             1             40  [[Ljava.lang.invoke.LambdaForm$Name; (java.base@17)
 356:             1             40  java.io.BufferedInputStream (java.base@17)
 357:             1             40  java.lang.ArithmeticException (java.base@17)
 358:             1             40  java.lang.Package$VersionInfo (java.base@17)
 359:             1             40  java.lang.VirtualMachineError (java.base@17)
 360:             1             40  java.net.Socket (java.base@17)
 361:             1             40  java.time.format.DateTimeFormatterBuilder (java.base@17)
 362:             1             40  java.time.format.DateTimeFormatterBuilder$FractionPrinterParser (java.base@17)
 363:             1             40  java.time.zone.ZoneRules (java.base@17)
 364:             1             40  java.util.ResourceBundle$2 (java.base@17)
 365:             1             40  jdk.internal.loader.URLClassPath (java.base@17)
 366:             1             40  jdk.internal.ref.Cleaner (java.base@17)
 367:             1             40  jdk.internal.ref.CleanerImpl$CleanerCleanable (java.base@17)
 368:             1             40  sun.nio.cs.StandardCharsets$Aliases (java.base@17)
 369:             1             40  sun.nio.cs.StandardCharsets$Cache (java.base@17)
 370:             1             40  sun.nio.cs.StandardCharsets$Classes (java.base@17)
 371:             1             40  sun.nio.cs.US_ASCII$Decoder (java.base@17)
 372:             1             40  sun.nio.cs.UTF_8$Decoder (java.base@17)
 373:             1             40  sun.text.resources.cldr.FormatData (java.base@17)
 374:             1             40  sun.text.resources.cldr.ext.FormatData_ru (jdk.localedata@17)
 375:             1             40  sun.util.locale.InternalLocaleBuilder (java.base@17)
 376:             1             40  sun.util.resources.Bundles$1 (java.base@17)
 377:             2             32  [Ljava.lang.StackTraceElement; (java.base@17)
 378:             1             32  [Ljava.lang.ThreadGroup; (java.base@17)
 379:             2             32  [Ljava.lang.annotation.Annotation; (java.base@17)
 380:             1             32  [Ljava.lang.invoke.LambdaFormEditor$Transform; (java.base@17)
 381:             1             32  [Ljava.lang.module.ModuleDescriptor$Modifier; (java.base@17)
 382:             1             32  [Ljava.lang.module.ModuleDescriptor$Requires$Modifier; (java.base@17)
 383:             1             32  [Ljava.net.Proxy$Type; (java.base@17)
 384:             1             32  [Ljava.net.StandardProtocolFamily; (java.base@17)
 385:             1             32  [Ljava.time.format.DateTimeFormatterBuilder$SettingsParser; (java.base@17)
 386:             1             32  [Ljava.time.format.ResolverStyle; (java.base@17)
 387:             1             32  [Ljava.time.temporal.IsoFields$Field; (java.base@17)
 388:             1             32  [Ljava.time.temporal.JulianFields$Field; (java.base@17)
 389:             2             32  [Ljava.util.regex.IntHashSet; (java.base@17)
 390:             1             32  [Ljava.util.regex.Pattern$Qtype; (java.base@17)
 391:             1             32  [Ljava.util.stream.StreamShape; (java.base@17)
 392:             1             32  [Ljdk.internal.module.ServicesCatalog; (java.base@17)
 393:             1             32  [Lsun.nio.fs.NativeBuffer; (java.base@17)
 394:             1             32  java.io.FileInputStream (java.base@17)
 395:             1             32  java.io.WinNTFileSystem (java.base@17)
 396:             2             32  java.lang.Boolean (java.base@17)
 397:             1             32  java.lang.Module$ArchivedData (java.base@17)
 398:             1             32  java.lang.module.ModuleDescriptor$Version (java.base@17)
 399:             2             32  java.nio.ByteOrder (java.base@17)
 400:             1             32  java.nio.DirectByteBuffer$Deallocator (java.base@17)
 401:             2             32  java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser (java.base@17)
 402:             1             32  java.util.ArrayList$Itr (java.base@17)
 403:             2             32  java.util.Collections$SingletonSet (java.base@17)
 404:             1             32  java.util.Collections$UnmodifiableMap (java.base@17)
 405:             2             32  java.util.HashMap$Values (java.base@17)
 406:             2             32  java.util.IdentityHashMap$KeySet (java.base@17)
 407:             2             32  java.util.LinkedHashMap$LinkedEntrySet (java.base@17)
 408:             2             32  java.util.ResourceBundle$SingleFormatControl (java.base@17)
 409:             2             32  java.util.concurrent.ConcurrentHashMap$EntrySetView (java.base@17)
 410:             2             32  java.util.concurrent.locks.ReentrantLock (java.base@17)
 411:             1             32  java.util.zip.ZipCoder$UTF8ZipCoder (java.base@17)
 412:             1             32  jdk.internal.loader.ArchivedClassLoaders (java.base@17)
 413:             2             32  jdk.internal.loader.ClassLoaderValue (java.base@17)
 414:             2             32  jdk.internal.module.ModuleResolution (java.base@17)
 415:             1             32  jdk.internal.org.objectweb.asm.ConstantDynamic (java.base@17)
 416:             1             32  jdk.internal.org.objectweb.asm.Handle (java.base@17)
 417:             1             32  jdk.net.ExtendedSocketOptions$1 (jdk.net@17)
 418:             1             32  sun.instrument.InstrumentationImpl (java.instrument@17)
 419:             2             32  sun.util.resources.LocaleData (java.base@17)
 420:             1             24  [Ljava.io.File$PathStatus; (java.base@17)
 421:             1             24  [Ljava.lang.ClassValue$Entry; (java.base@17)
 422:             1             24  [Ljava.lang.invoke.MethodHandles$Lookup$ClassOption; (java.base@17)
 423:             1             24  [Ljava.net.URL; (java.base@17)
 424:             1             24  [Ljava.time.temporal.IsoFields$Unit; (java.base@17)
 425:             1             24  [Ljava.util.Locale$Category; (java.base@17)
 426:             1             24  [Ljava.util.jar.Manifest; (java.base@17)
 427:             1             24  java.lang.ClassValue$Version (java.base@17)
 428:             1             24  java.lang.Double (java.base@17)
 429:             1             24  java.lang.invoke.MethodType$ConcurrentWeakInternSet (java.base@17)
 430:             1             24  java.lang.invoke.VarHandles$1 (java.base@17)
 431:             1             24  java.lang.reflect.ReflectPermission (java.base@17)
 432:             1             24  java.net.Inet6AddressImpl (java.base@17)
 433:             1             24  java.net.Proxy (java.base@17)
 434:             1             24  java.net.Socket$SocketInputStream (java.base@17)
 435:             1             24  java.time.ZoneRegion (java.base@17)
 436:             1             24  java.time.format.DecimalStyle (java.base@17)
 437:             1             24  java.time.temporal.IsoFields$Field$1 (java.base@17)
 438:             1             24  java.time.temporal.IsoFields$Field$2 (java.base@17)
 439:             1             24  java.time.temporal.IsoFields$Field$3 (java.base@17)
 440:             1             24  java.time.temporal.IsoFields$Field$4 (java.base@17)
 441:             1             24  java.time.zone.TzdbZoneRulesProvider (java.base@17)
 442:             1             24  java.util.Arrays$ArrayList (java.base@17)
 443:             1             24  java.util.Collections$EmptyMap (java.base@17)
 444:             1             24  java.util.Collections$UnmodifiableRandomAccessList (java.base@17)
 445:             1             24  java.util.Locale$Cache (java.base@17)
 446:             1             24  java.util.OptionalInt (java.base@17)
 447:             1             24  java.util.ResourceBundle$Control$CandidateListCache (java.base@17)
 448:             1             24  java.util.Scanner$PatternLRUCache (java.base@17)
 449:             1             24  java.util.jar.Manifest (java.base@17)
 450:             1             24  java.util.regex.Pattern$CharPredicate$$Lambda$21/0x0000000800c4e438 (java.base@17)
 451:             1             24  java.util.regex.Pattern$CharProperty (java.base@17)
 452:             1             24  java.util.regex.Pattern$Dollar (java.base@17)
 453:             1             24  java.util.regex.Pattern$Slice (java.base@17)
 454:             1             24  jdk.internal.jimage.ImageReader (java.base@17)
 455:             1             24  jdk.internal.loader.URLClassPath$FileLoader (java.base@17)
 456:             1             24  jdk.internal.module.ModuleBootstrap$SafeModuleFinder (java.base@17)
 457:             1             24  jdk.internal.module.ModuleHashes (java.base@17)
 458:             1             24  jdk.internal.ref.CleanerImpl (java.base@17)
 459:             1             24  ru.job4j.tracker.MemTracker
 460:             1             24  ru.job4j.tracker.ValidateInput
 461:             1             24  sun.instrument.TransformerManager (java.instrument@17)
 462:             1             24  sun.nio.ch.Util$BufferCache (java.base@17)
 463:             1             24  sun.nio.cs.ISO_8859_1 (java.base@17)
 464:             1             24  sun.nio.cs.MS1251 (java.base@17)
 465:             1             24  sun.nio.cs.StandardCharsets (java.base@17)
 466:             1             24  sun.nio.cs.US_ASCII (java.base@17)
 467:             1             24  sun.nio.cs.UTF_16 (java.base@17)
 468:             1             24  sun.nio.cs.UTF_16BE (java.base@17)
 469:             1             24  sun.nio.cs.UTF_16LE (java.base@17)
 470:             1             24  sun.nio.cs.UTF_8 (java.base@17)
 471:             1             24  sun.nio.fs.WindowsFileSystem (java.base@17)
 472:             1             24  sun.util.cldr.CLDRCalendarNameProviderImpl (java.base@17)
 473:             1             24  sun.util.cldr.CLDRTimeZoneNameProviderImpl (java.base@17)
 474:             1             24  sun.util.locale.BaseLocale$Cache (java.base@17)
 475:             1             24  sun.util.locale.provider.CalendarNameProviderImpl (java.base@17)
 476:             1             24  sun.util.locale.provider.DecimalFormatSymbolsProviderImpl (java.base@17)
 477:             1             24  sun.util.locale.provider.NumberFormatProviderImpl (java.base@17)
 478:             1             24  sun.util.locale.provider.TimeZoneNameProviderImpl (java.base@17)
 479:             1             16  [F (java.base@17)
 480:             1             16  [Ljava.lang.Throwable; (java.base@17)
 481:             1             16  [Ljava.security.cert.Certificate; (java.base@17)
 482:             1             16  [Ljava.text.FieldPosition; (java.base@17)
 483:             1             16  [Ljava.time.zone.ZoneOffsetTransitionRule; (java.base@17)
 484:             1             16  [Lsun.instrument.TransformerManager$TransformerInfo; (java.instrument@17)
 485:             1             16  java.io.FileDescriptor$1 (java.base@17)
 486:             1             16  java.io.RandomAccessFile$2 (java.base@17)
 487:             1             16  java.lang.CharacterData00 (java.base@17)
 488:             1             16  java.lang.CharacterDataLatin1 (java.base@17)
 489:             1             16  java.lang.ClassValue$Identity (java.base@17)
 490:             1             16  java.lang.Float (java.base@17)
 491:             1             16  java.lang.Runtime (java.base@17)
 492:             1             16  java.lang.String$CaseInsensitiveComparator (java.base@17)
 493:             1             16  java.lang.System$2 (java.base@17)
 494:             1             16  java.lang.Terminator$1 (java.base@17)
 495:             1             16  java.lang.invoke.ClassSpecializer$1 (java.base@17)
 496:             1             16  java.lang.invoke.MemberName$Factory (java.base@17)
 497:             1             16  java.lang.invoke.MethodHandleImpl$1 (java.base@17)
 498:             1             16  java.lang.invoke.StringConcatFactory$1 (java.base@17)
 499:             1             16  java.lang.invoke.StringConcatFactory$2 (java.base@17)
 500:             1             16  java.lang.invoke.StringConcatFactory$3 (java.base@17)
 501:             1             16  java.lang.invoke.VarHandle$1 (java.base@17)
 502:             1             16  java.lang.module.ModuleDescriptor$1 (java.base@17)
 503:             1             16  java.lang.ref.Cleaner (java.base@17)
 504:             1             16  java.lang.ref.Cleaner$1 (java.base@17)
 505:             1             16  java.lang.ref.Reference$1 (java.base@17)
 506:             1             16  java.lang.reflect.ReflectAccess (java.base@17)
 507:             1             16  java.net.InetAddress$1 (java.base@17)
 508:             1             16  java.net.InetAddress$PlatformNameService (java.base@17)
 509:             1             16  java.net.SocketImpl$$Lambda$14/0x0000000800c45e78 (java.base@17)
 510:             1             16  java.net.URI$1 (java.base@17)
 511:             1             16  java.net.URL$3 (java.base@17)
 512:             1             16  java.net.URL$DefaultFactory (java.base@17)
 513:             1             16  java.nio.Bits$1 (java.base@17)
 514:             1             16  java.nio.Buffer$1 (java.base@17)
 515:             1             16  java.security.ProtectionDomain$JavaSecurityAccessImpl (java.base@17)
 516:             1             16  java.text.DecimalFormatSymbols$$Lambda$59/0x800000061 (java.base@17)
 517:             1             16  java.time.Clock$SystemClock (java.base@17)
 518:             1             16  java.time.chrono.IsoChronology (java.base@17)
 519:             1             16  java.time.format.DateTimeFormatter$$Lambda$49/0x800000057 (java.base@17)
 520:             1             16  java.time.format.DateTimeFormatter$$Lambda$50/0x800000058 (java.base@17)
 521:             1             16  java.time.format.DateTimeFormatterBuilder$$Lambda$48/0x800000056 (java.base@17)
 522:             1             16  java.time.format.DateTimeFormatterBuilder$InstantPrinterParser (java.base@17)
 523:             1             16  java.time.format.DateTimeTextProvider (java.base@17)
 524:             1             16  java.time.format.DateTimeTextProvider$1 (java.base@17)
 525:             1             16  java.time.temporal.TemporalQueries$1 (java.base@17)
 526:             1             16  java.time.temporal.TemporalQueries$2 (java.base@17)
 527:             1             16  java.time.temporal.TemporalQueries$3 (java.base@17)
 528:             1             16  java.time.temporal.TemporalQueries$4 (java.base@17)
 529:             1             16  java.time.temporal.TemporalQueries$5 (java.base@17)
 530:             1             16  java.time.temporal.TemporalQueries$6 (java.base@17)
 531:             1             16  java.time.temporal.TemporalQueries$7 (java.base@17)
 532:             1             16  java.util.Collections$EmptyEnumeration (java.base@17)
 533:             1             16  java.util.Collections$EmptyIterator (java.base@17)
 534:             1             16  java.util.Collections$EmptyList (java.base@17)
 535:             1             16  java.util.Collections$EmptySet (java.base@17)
 536:             1             16  java.util.EnumMap$1 (java.base@17)
 537:             1             16  java.util.Locale$Builder (java.base@17)
 538:             1             16  java.util.ResourceBundle$1 (java.base@17)
 539:             1             16  java.util.ResourceBundle$Control (java.base@17)
 540:             1             16  java.util.Spliterators$EmptySpliterator$OfDouble (java.base@17)
 541:             1             16  java.util.Spliterators$EmptySpliterator$OfInt (java.base@17)
 542:             1             16  java.util.Spliterators$EmptySpliterator$OfLong (java.base@17)
 543:             1             16  java.util.Spliterators$EmptySpliterator$OfRef (java.base@17)
 544:             1             16  java.util.concurrent.ConcurrentSkipListSet (java.base@17)
 545:             1             16  java.util.jar.Attributes (java.base@17)
 546:             1             16  java.util.jar.JavaUtilJarAccessImpl (java.base@17)
 547:             1             16  java.util.regex.CharPredicates$$Lambda$16/0x0000000800c4db40 (java.base@17)
 548:             1             16  java.util.regex.CharPredicates$$Lambda$18/0x0000000800c4e1e0 (java.base@17)
 549:             1             16  java.util.regex.CharPredicates$$Lambda$20/0x800000029 (java.base@17)
 550:             1             16  java.util.regex.Pattern$$Lambda$17/0x0000000800c4df88 (java.base@17)
 551:             1             16  java.util.regex.Pattern$$Lambda$31/0x0000000800c504b0 (java.base@17)
 552:             1             16  java.util.regex.Pattern$CharPredicate$$Lambda$23/0x80000002d (java.base@17)
 553:             1             16  java.util.regex.Pattern$LastNode (java.base@17)
 554:             1             16  java.util.regex.Pattern$Node (java.base@17)
 555:             1             16  java.util.stream.Collectors$$Lambda$5/0x800000010 (java.base@17)
 556:             1             16  java.util.stream.Collectors$$Lambda$6/0x800000011 (java.base@17)
 557:             1             16  java.util.stream.Collectors$$Lambda$7/0x800000016 (java.base@17)
 558:             1             16  java.util.stream.Collectors$$Lambda$8/0x800000017 (java.base@17)
 559:             1             16  java.util.stream.FindOps$FindSink$OfInt$$Lambda$60/0x800000062 (java.base@17)
 560:             1             16  java.util.stream.FindOps$FindSink$OfInt$$Lambda$61/0x800000063 (java.base@17)
 561:             1             16  java.util.stream.FindOps$FindSink$OfInt$$Lambda$62/0x800000064 (java.base@17)
 562:             1             16  java.util.stream.FindOps$FindSink$OfInt$$Lambda$63/0x800000065 (java.base@17)
 563:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$11/0x80000001a (java.base@17)
 564:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$12/0x80000001b (java.base@17)
 565:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$13/0x80000001c (java.base@17)
 566:             1             16  java.util.stream.FindOps$FindSink$OfRef$$Lambda$14/0x80000001d (java.base@17)
 567:             1             16  java.util.zip.ZipFile$1 (java.base@17)
 568:             1             16  jdk.internal.jimage.ImageReaderFactory$1 (java.base@17)
 569:             1             16  jdk.internal.jimage.ImageStringsReader (java.base@17)
 570:             1             16  jdk.internal.jimage.decompressor.Decompressor (java.base@17)
 571:             1             16  jdk.internal.misc.ScopedMemoryAccess (java.base@17)
 572:             1             16  jdk.internal.misc.TerminatingThreadLocal$1 (java.base@17)
 573:             1             16  jdk.internal.misc.Unsafe (java.base@17)
 574:             1             16  jdk.internal.module.DefaultRoots$$Lambda$1/0x800000002 (java.base@17)
 575:             1             16  jdk.internal.module.DefaultRoots$$Lambda$16/0x80000001f (java.base@17)
 576:             1             16  jdk.internal.module.DefaultRoots$$Lambda$2/0x800000004 (java.base@17)
 577:             1             16  jdk.internal.module.DefaultRoots$$Lambda$4/0x800000007 (java.base@17)
 578:             1             16  jdk.internal.module.ModulePatcher (java.base@17)
 579:             1             16  jdk.internal.module.ModuleTarget (java.base@17)
 580:             1             16  jdk.internal.perf.Perf (java.base@17)
 581:             1             16  jdk.internal.reflect.ReflectionFactory (java.base@17)
 582:             1             16  jdk.internal.util.Preconditions$1 (java.base@17)
 583:             1             16  jdk.net.ExtendedSocketOptions$PlatformSocketOptions (jdk.net@17)
 584:             1             16  ru.job4j.tracker.ConsoleInput
 585:             1             16  ru.job4j.tracker.ConsoleOutput
 586:             1             16  ru.job4j.tracker.CreateAction
 587:             1             16  ru.job4j.tracker.CreateManyItems
 588:             1             16  ru.job4j.tracker.DeleteAction
 589:             1             16  ru.job4j.tracker.DeleteAllItems
 590:             1             16  ru.job4j.tracker.ExitAction
 591:             1             16  ru.job4j.tracker.FindAllAction
 592:             1             16  ru.job4j.tracker.FindByIdAction
 593:             1             16  ru.job4j.tracker.FindByNameAction
 594:             1             16  ru.job4j.tracker.ReplaceAction
 595:             1             16  ru.job4j.tracker.StartUI
 596:             1             16  sun.net.spi.DefaultProxySelector (java.base@17)
 597:             1             16  sun.net.www.protocol.file.Handler (java.base@17)
 598:             1             16  sun.net.www.protocol.jar.Handler (java.base@17)
 599:             1             16  sun.net.www.protocol.jrt.Handler (java.base@17)
 600:             1             16  sun.nio.ch.Net$1 (java.base@17)
 601:             1             16  sun.nio.ch.NioSocketImpl$$Lambda$15/0x0000000800c495f8 (java.base@17)
 602:             1             16  sun.nio.ch.NioSocketImpl$1 (java.base@17)
 603:             1             16  sun.nio.ch.SocketDispatcher (java.base@17)
 604:             1             16  sun.nio.ch.Util$1 (java.base@17)
 605:             1             16  sun.nio.fs.NativeBuffers$1 (java.base@17)
 606:             1             16  sun.nio.fs.WindowsFileSystemProvider (java.base@17)
 607:             1             16  sun.util.calendar.Gregorian (java.base@17)
 608:             1             16  sun.util.cldr.CLDRBaseLocaleDataMetaInfo (java.base@17)
 609:             1             16  sun.util.cldr.CLDRLocaleProviderAdapter$$Lambda$51/0x800000059 (java.base@17)
 610:             1             16  sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar (java.base@17)
 611:             1             16  sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter (java.base@17)
 612:             1             16  sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter (java.base@17)
 613:             1             16  sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator (java.base@17)
 614:             1             16  sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter (java.base@17)
 615:             1             16  sun.util.resources.LocaleData$LocaleDataStrategy (java.base@17)
 616:             1             16  sun.util.resources.LocaleData$SupplementaryStrategy (java.base@17)
 617:             1             16  sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo (jdk.localedata@17)
Total        150779        6007296

Видим сколько создано объектов, сколько места они занимают, например Item'ов мы создали с помощью класса CreateManyItems 10000 штук.


3) Получим данные о распределении кучи с помощью jmap

Для начала, получаем информацию что используется G1 gc.

Heap Configuration: Общая информация о конфигурации кучи.
Heap Usage: объем кучи, % заполненности кучи.
G1 Young Generation: распредедление young памяти (eden и survivor секции)
G1 Old Generation: распределение old памяти.(объектов, получивших продвижение)

в моем случае:

Heap Usage: 0.23503995557902585%
Eden space: 3.125% used
Survivor space: 100.0% used
G1 Old Generation: 0.8011031936813187%.


>jhsdb jmap --heap --pid 5292

Attaching to process ID 5292, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 17+35-2724

using thread-local object allocation.
Garbage-First (G1) GC with 8 thread(s)

Heap Configuration:
   MinHeapFreeRatio         = 40
   MaxHeapFreeRatio         = 70
   MaxHeapSize              = 2109734912 (2012.0MB) максимальный размер кучи
   NewSize                  = 1363144 (1.2999954223632812MB)
   MaxNewSize               = 1265631232 (1207.0MB)
   OldSize                  = 5452592 (5.1999969482421875MB)
   NewRatio                 = 2
   SurvivorRatio            = 8
   MetaspaceSize            = 22020096 (21.0MB)
   CompressedClassSpaceSize = 1073741824 (1024.0MB)
   MaxMetaspaceSize         = 17592186044415 MB
   G1HeapRegionSize         = 1048576 (1.0MB)

Heap Usage:
G1 Heap:
   regions  = 2012
   capacity = 2109734912 (2012.0MB)
   used     = 4958720 (4.72900390625MB)
   free     = 2104776192 (2007.27099609375MB)
   0.23503995557902585% used
G1 Young Generation:
Eden Space:
   regions  = 1
   capacity = 33554432 (32.0MB)
   used     = 1048576 (1.0MB)
   free     = 32505856 (31.0MB)
   3.125% used
Survivor Space:
   regions  = 3
   capacity = 3145728 (3.0MB)
   used     = 3145728 (3.0MB)
   free     = 0 (0.0MB)
   100.0% used
G1 Old Generation:
   regions  = 1
   capacity = 95420416 (91.0MB)
   used     = 764416 (0.72900390625MB)
   free     = 94656000 (90.27099609375MB)
   0.8011031936813187% used


Добавим еще 10 000 000 объектов

Видим что память кучи значительно заполнилась
Attaching to process ID 5292, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 17+35-2724

using thread-local object allocation.
Garbage-First (G1) GC with 8 thread(s)

Heap Configuration:
   MinHeapFreeRatio         = 40
   MaxHeapFreeRatio         = 70
   MaxHeapSize              = 2109734912 (2012.0MB)
   NewSize                  = 1363144 (1.2999954223632812MB)
   MaxNewSize               = 1265631232 (1207.0MB)
   OldSize                  = 5452592 (5.1999969482421875MB)
   NewRatio                 = 2
   SurvivorRatio            = 8
   MetaspaceSize            = 22020096 (21.0MB)
   CompressedClassSpaceSize = 1073741824 (1024.0MB)
   MaxMetaspaceSize         = 17592186044415 MB
   G1HeapRegionSize         = 1048576 (1.0MB)

Heap Usage:
G1 Heap:
   regions  = 2012
   capacity = 2109734912 (2012.0MB)
   used     = 1877999616 (1791.0MB)
   free     = 231735296 (221.0MB)
   89.01590457256461% used
G1 Young Generation:
Eden Space:
   regions  = 49
   capacity = 96468992 (92.0MB)
   used     = 51380224 (49.0MB)
   free     = 45088768 (43.0MB)
   53.26086956521739% used
Survivor Space:
   regions  = 13
   capacity = 13631488 (13.0MB)
   used     = 13631488 (13.0MB)
   free     = 0 (0.0MB)
   100.0% used
G1 Old Generation:
   regions  = 1729
   capacity = 1999634432 (1907.0MB)
   used     = 1812987904 (1729.0MB)
   free     = 186646528 (178.0MB)
   90.66596748820136% used

   =======попробуем все удалить
   (во время удаления, все повисло, запустил заново, с новым pid)
    создадим 1 000 000 000 объектов

> jhsdb jmap --heap --pid 6524

Attaching to process ID 6524, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 17+35-2724

using thread-local object allocation.
Garbage-First (G1) GC with 8 thread(s)

Heap Configuration:
   MinHeapFreeRatio         = 40
   MaxHeapFreeRatio         = 70
   MaxHeapSize              = 2109734912 (2012.0MB)
   NewSize                  = 1363144 (1.2999954223632812MB)
   MaxNewSize               = 1265631232 (1207.0MB)
   OldSize                  = 5452592 (5.1999969482421875MB)
   NewRatio                 = 2
   SurvivorRatio            = 8
   MetaspaceSize            = 22020096 (21.0MB)
   CompressedClassSpaceSize = 1073741824 (1024.0MB)
   MaxMetaspaceSize         = 17592186044415 MB
   G1HeapRegionSize         = 1048576 (1.0MB)

Heap Usage:
G1 Heap:
   regions  = 2012
   capacity = 2109734912 (2012.0MB)
   used     = 2108854568 (2011.1604385375977MB)
   free     = 880344 (0.8395614624023438MB)
   99.95827229312115% used
G1 Young Generation:
Eden Space:
   regions  = 0
   capacity = 0 (0.0MB)
   used     = 0 (0.0MB)
   free     = 0 (0.0MB)
   0.0% used
Survivor Space:
   regions  = 0
   capacity = 0 (0.0MB)
   used     = 0 (0.0MB)
   free     = 0 (0.0MB)
   0.0% used
G1 Old Generation:
   regions  = 0
   capacity = 2109734912 (2012.0MB)
   used     = 2108854568 (2011.1604385375977MB)
   free     = 880344 (0.8395614624023438MB)
   99.95827229312115% used

=== Create many items ===
Введите кол-во заявок 1000000000
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space: failed reallocation of scalar replaced objects

вся куча ушла под old память, новые объекты не создаются, вылетает OutOfMemoryError, процесс останавливается.